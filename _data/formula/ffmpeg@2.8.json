{
  "name": "ffmpeg@2.8",
  "full_name": "ffmpeg@2.8",
  "oldname": "ffmpeg28",
  "aliases": [

  ],
  "versioned_formulae": [

  ],
  "desc": "Play, record, convert, and stream audio and video",
  "homepage": "https://ffmpeg.org/",
  "versions": {
    "stable": "2.8.15",
    "devel": null,
    "head": null,
    "bottle": true
  },
  "revision": 0,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "cellar": "/home/linuxbrew/.linuxbrew/Cellar",
      "prefix": "/home/linuxbrew/.linuxbrew",
      "root_url": "https://homebrew.bintray.com/bottles",
      "files": {
        "mojave": {
          "url": "https://homebrew.bintray.com/bottles/ffmpeg@2.8-2.8.15.mojave.bottle.tar.gz",
          "sha256": "95179f517090dd0fbdca100668ca9baea81b6d4bb9ebd3b1888f5f49970abbf2"
        },
        "high_sierra": {
          "url": "https://homebrew.bintray.com/bottles/ffmpeg@2.8-2.8.15.high_sierra.bottle.tar.gz",
          "sha256": "77714c2ed74758ffca2e0852c7784022a06903be46a4094b5813cdcd3a3f7caf"
        },
        "sierra": {
          "url": "https://homebrew.bintray.com/bottles/ffmpeg@2.8-2.8.15.sierra.bottle.tar.gz",
          "sha256": "e5c3822571957ffa442a96f4287c591b4943bf03c89d8fe3dafbf3efc7e98013"
        },
        "el_capitan": {
          "url": "https://homebrew.bintray.com/bottles/ffmpeg@2.8-2.8.15.el_capitan.bottle.tar.gz",
          "sha256": "aaa810b670d9d60e1f81d8bd7f0cd6bebba3732b48f42749af59b1839a4c5727"
        }
      }
    }
  },
  "keg_only": true,
  "options": [
    {
      "option": "--without-x264",
      "description": "Disable H.264 encoder"
    },
    {
      "option": "--without-lame",
      "description": "Disable MP3 encoder"
    },
    {
      "option": "--without-libvo-aacenc",
      "description": "Disable VisualOn AAC encoder"
    },
    {
      "option": "--without-xvid",
      "description": "Disable Xvid MPEG-4 video encoder"
    },
    {
      "option": "--without-qtkit",
      "description": "Disable deprecated QuickTime framework"
    },
    {
      "option": "--without-securetransport",
      "description": "Disable use of SecureTransport"
    },
    {
      "option": "--with-rtmpdump",
      "description": "Enable RTMP protocol"
    },
    {
      "option": "--with-libass",
      "description": "Enable ASS/SSA subtitle format"
    },
    {
      "option": "--with-opencore-amr",
      "description": "Enable Opencore AMR NR/WB audio format"
    },
    {
      "option": "--with-openjpeg",
      "description": "Enable JPEG 2000 image format"
    },
    {
      "option": "--with-openssl",
      "description": "Enable SSL support"
    },
    {
      "option": "--with-libssh",
      "description": "Enable SFTP protocol via libssh"
    },
    {
      "option": "--with-schroedinger",
      "description": "Enable Dirac video format"
    },
    {
      "option": "--with-ffplay",
      "description": "Enable FFplay media player"
    },
    {
      "option": "--with-tools",
      "description": "Enable additional FFmpeg tools"
    },
    {
      "option": "--with-fdk-aac",
      "description": "Enable the Fraunhofer FDK AAC library"
    },
    {
      "option": "--with-libvidstab",
      "description": "Enable vid.stab support for video stabilization"
    },
    {
      "option": "--with-x265",
      "description": "Enable x265 encoder"
    },
    {
      "option": "--with-libsoxr",
      "description": "Enable the soxr resample library"
    },
    {
      "option": "--with-webp",
      "description": "Enable using libwebp to encode WEBP images"
    },
    {
      "option": "--with-zeromq",
      "description": "Enable using libzeromq to receive commands sent through a libzeromq client"
    },
    {
      "option": "--with-snappy",
      "description": "Enable Snappy library"
    },
    {
      "option": "--with-dcadec",
      "description": "Enable dcadec library"
    },
    {
      "option": "--with-faac",
      "description": "Build with faac support"
    },
    {
      "option": "--with-fontconfig",
      "description": "Build with fontconfig support"
    },
    {
      "option": "--with-freetype",
      "description": "Build with freetype support"
    },
    {
      "option": "--with-frei0r",
      "description": "Build with frei0r support"
    },
    {
      "option": "--with-libbluray",
      "description": "Build with libbluray support"
    },
    {
      "option": "--with-libbs2b",
      "description": "Build with libbs2b support"
    },
    {
      "option": "--with-libcaca",
      "description": "Build with libcaca support"
    },
    {
      "option": "--with-libquvi",
      "description": "Build with libquvi support"
    },
    {
      "option": "--with-libvorbis",
      "description": "Build with libvorbis support"
    },
    {
      "option": "--with-libvpx",
      "description": "Build with libvpx support"
    },
    {
      "option": "--with-opus",
      "description": "Build with opus support"
    },
    {
      "option": "--with-speex",
      "description": "Build with speex support"
    },
    {
      "option": "--with-theora",
      "description": "Build with theora support"
    }
  ],
  "build_dependencies": [
    "pkg-config",
    "texi2html",
    "yasm"
  ],
  "dependencies": [

  ],
  "recommended_dependencies": [
    "lame",
    "libvo-aacenc",
    "x264",
    "xvid"
  ],
  "optional_dependencies": [
    "dcadec",
    "faac",
    "fdk-aac",
    "fontconfig",
    "freetype",
    "frei0r",
    "libass",
    "libbluray",
    "libbs2b",
    "libcaca",
    "libquvi",
    "libsoxr",
    "libssh",
    "libvidstab",
    "libvorbis",
    "libvpx",
    "opencore-amr",
    "openjpeg",
    "openssl",
    "opus",
    "rtmpdump",
    "schroedinger",
    "snappy",
    "speex",
    "theora",
    "webp",
    "x265",
    "zeromq"
  ],
  "requirements": [

  ],
  "conflicts_with": [

  ],
  "caveats": "FFmpeg has been built without libfaac for licensing reasons;\nlibvo-aacenc is used by default.\nTo install with libfaac, you can:\n  brew reinstall ffmpeg28 --with-faac\n\nYou can also use the experimental FFmpeg encoder, libfdk-aac, or\nlibvo_aacenc to encode AAC audio:\n  ffmpeg -i input.wav -c:a aac -strict experimental output.m4a\nOr:\n  brew reinstall ffmpeg28 --with-fdk-aac\n  ffmpeg -i input.wav -c:a libfdk_aac output.m4a\n",
  "installed": [

  ],
  "linked_keg": null,
  "pinned": false,
  "outdated": false
}