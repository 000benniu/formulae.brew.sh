{
  "name": "siege",
  "full_name": "siege",
  "oldname": null,
  "aliases": [

  ],
  "versioned_formulae": [

  ],
  "desc": "HTTP regression testing and benchmarking utility",
  "homepage": "https://www.joedog.org/siege-home/",
  "versions": {
    "stable": "4.0.4",
    "devel": null,
    "head": null,
    "bottle": true
  },
  "revision": 1,
  "version_scheme": 0,
  "bottle": {
    "stable": {
      "rebuild": 0,
      "cellar": "/usr/local/Cellar",
      "prefix": "/usr/local",
      "root_url": "https://homebrew.bintray.com/bottles",
      "files": {
        "mojave": {
          "url": "https://homebrew.bintray.com/bottles/siege-4.0.4_1.mojave.bottle.tar.gz",
          "sha256": "efa8687e655b73e1c890867584a894e2bf3f5b458f3210dd2e4d087eb2185570"
        },
        "high_sierra": {
          "url": "https://homebrew.bintray.com/bottles/siege-4.0.4_1.high_sierra.bottle.tar.gz",
          "sha256": "6f6ddf745927d9e2b6a60f0c78868a952cb223b4a5ff127c1d165ee1abac9c0d"
        },
        "sierra": {
          "url": "https://homebrew.bintray.com/bottles/siege-4.0.4_1.sierra.bottle.tar.gz",
          "sha256": "637cbbe464290468705fd46e92ad3e90c60e6e29518591cb33ff33d72e2af3f4"
        }
      }
    }
  },
  "keg_only": false,
  "bottle_disabled": false,
  "options": [

  ],
  "build_dependencies": [

  ],
  "dependencies": [
    "openssl"
  ],
  "recommended_dependencies": [

  ],
  "optional_dependencies": [

  ],
  "requirements": [

  ],
  "conflicts_with": [

  ],
  "caveats": "macOS has only 16K ports available that won't be released until socket\nTIME_WAIT is passed. The default timeout for TIME_WAIT is 15 seconds.\nConsider reducing in case of available port bottleneck.\n\nYou can check whether this is a problem with netstat:\n\n    # sysctl net.inet.tcp.msl\n    net.inet.tcp.msl: 15000\n\n    # sudo sysctl -w net.inet.tcp.msl=1000\n    net.inet.tcp.msl: 15000 -> 1000\n\nRun siege.config to create the ~/.siegerc config file.\n",
  "installed": [

  ],
  "linked_keg": null,
  "pinned": false,
  "outdated": false
}